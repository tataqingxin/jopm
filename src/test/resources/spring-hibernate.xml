<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd"
	default-autowire="byName" default-lazy-init="false">
	
	<!-- 引入属性文件 -->
	<context:property-placeholder location="classpath:dbconfig.properties" />
	<!-- 配置数据源 -->
	<bean name="dataSource_jump" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialSize" value="0" /><!-- 初始化连接大小 -->
		<property name="maxActive" value="20" /><!-- 连接池最大使用连接数量 -->
		<!-- 连接池最大空闲 <property name="maxIdle" value="20" /> -->
		<property name="minIdle" value="0" /><!-- 连接池最小空闲 -->
		<property name="maxWait" value="60000" /><!-- 获取连接最大等待时间 -->
		<property name="validationQuery" value="${validation.sql}" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" /><!-- 
			配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="25200000" /><!-- 
			配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="removeAbandoned" value="true" /><!-- 打开removeAbandoned功能 -->
		<property name="removeAbandonedTimeout" value="1800" /><!-- 1800秒，也就是30分钟 -->
		<property name="logAbandoned" value="true" /><!-- 关闭abanded连接时输出错误日志 -->
		<property name="filters" value="stat" /> <!-- 开启Druid的监控统计功能 -->
	</bean>

	<!-- 数据源集合 -->
	<bean id="dataSource" class="com.unistc.core.extend.datasource.DynamicDataSource">
		<property name="targetDataSources">
			<map key-type="com.unistc.core.extend.datasource.DataSourceType">
				<entry key="dataSource_jump" value-ref="dataSource_jump" />
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="dataSource_jump" />
	</bean>
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop>
			</props>
		</property>
		<!-- 注解方式配置 -->
		<property name="packagesToScan">
			<list>
				<value>com.unistc.**</value>
				<value>com.zjy.**</value>
				<!-- <value>com.unistc.demo.common.entity.**</value>
				<value>com.unistc.demo.easyui.entity.**</value> -->
			</list>
		</property>
	</bean>

	<!-- JDBC配置 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>
	<bean id="namedParameterJdbcTemplate"
		class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
		<constructor-arg ref="dataSource" />
	</bean>
	
	<!-- 配置事物管理器，在*ServiceImpl里写@Transactional就可以启用事物管理 -->
	<bean name="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- 定时任务配置 -->
</beans>